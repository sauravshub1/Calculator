{"version":3,"sources":["Calculator.js","Components/button.js","serviceWorker.js","index.js"],"names":["Calculator","props","reset","setState","current","previous","addToCurrent","symbol","indexOf","state","push","nextIsReset","calculate","length","eval","String","buttons","cols","action","this","className","type","value","map","btn","i","key","React","Component","button","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.82b5465b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from './Components/button'\r\nimport  './css/button.css'\r\nclass Calculator extends React.Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.state=\r\n\t\t{\r\n\t\t\tcurrent:'0',\r\n\t\t\tprevious:[],\r\n\t\t\tnextIsReset: false\r\n\t\t}\r\n\t}\r\n\treset = () => {\r\n\t\tthis.setState({current: 0, previous:[]}\r\n\t\t\t);\r\n\t}\r\n\taddToCurrent = (symbol) =>{\r\n\r\n\t\tif(['/','-','+','*'].indexOf(symbol)> -1)\r\n\t\t{\r\n\t\t\tlet {previous}=this.state;\r\n\t\t\tprevious.push(this.state.current + symbol);\r\n\t\tthis.setState({previous, nextIsReset: true});\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif((this.state.current === \"0\" && symbol !==\".\")|| (this.state.nextIsReset))\r\n\t\t\t{\r\n\t\t\t\tthis.setState({current: symbol,nextIsReset:false});\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t        this.setState({current: this.state.current+symbol});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcalculate = (symbol) =>\r\n\t{\r\n\t\tlet { current,previous,nextIsReset} =this.state;\r\n\t\tif(previous.length > 0){\r\n\t\t\tcurrent = eval(String(previous[previous.length -1] + current));\r\n\t\t\tthis.setState({current,previous:[],nextIsReset:true});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst buttons=[\r\n\t\t\t{symbol:'C', cols: 3, action: this.reset},\r\n\t\t\t{symbol:'/', cols: 1, action: this.addToCurrent},\r\n\t\t\t{symbol:'7', cols: 1, action: this.addToCurrent},\r\n\t\t\t{symbol:'8', cols: 1, action: this.addToCurrent},\r\n\t\t\t{symbol:'9', cols: 1, action: this.addToCurrent},\r\n\t\t\t{symbol:'*', cols: 1, action: this.addToCurrent},\r\n\t\t\t{symbol:'4', cols: 1, action: this.addToCurrent},\r\n\t\t\t{symbol:'5', cols: 1, action: this.addToCurrent},\r\n\t\t\t{symbol:'6', cols: 1, action: this.addToCurrent},\r\n\t\t\t{symbol:'-', cols: 1, action: this.addToCurrent},\r\n\t\t\t{symbol:'1', cols: 1, action: this.addToCurrent},\r\n\t\t\t{symbol:'2', cols: 1, action: this.addToCurrent},\r\n\t\t\t{symbol:'3', cols: 1, action: this.addToCurrent},\r\n\t\t\t{symbol:'+', cols: 1, action: this.addToCurrent},\r\n\t\t\t{symbol:'0', cols: 2, action: this.addToCurrent},\r\n\t\t\t{symbol:'.', cols: 1, action: this.addToCurrent},\r\n\t\t\t{symbol:'=', cols: 1, action: this.calculate},\r\n\t\t]\r\n\t\treturn(\r\n\t\t\t<div className='Calculator'>\r\n\t\t\t\t{ this.state.previous.length > 0 ?\r\n\t\t\t\t    <div className=\"floaty-last\"> {this.state.previous[this.state.previous.length-1]} </div>\r\n\r\n\t\t\t\t:null}\r\n\r\n\t\t\t    <input className='result' type='text' value={this.state.current} />\r\n                {buttons.map((btn,i) => {\r\n\t\t\t\t\treturn <Button key={i} symbol={btn.symbol} cols={btn.cols} action={(symbol) => btn.action(symbol)} />\r\n\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\texport default Calculator","import React, { Component } from 'react';\r\n\r\nclass button extends Component{\r\n    render(){\r\n        return (\r\n            <div className={`column-${this.props.cols}`}>\r\n                <button className=\"calc-button\" onClick={() => this.props.action(this.props.symbol)}>{this.props.symbol}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default button; ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './Calculator';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}